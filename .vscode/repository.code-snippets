{
  // Place your ReduxObservable workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Repository Class": {
    "prefix": ["repo-class"],
    "body": [
      "import {Repository, RepositoryPath} from 'src/core/Repository';",
      "",
      "class ${1:Demo}Repository extends Repository<",
      "\t${3:ListRequest},",
      "\t${4:CreateRequest},",
      "\t${5:UpdateRequest},",
      "\t${6:ListResponse},",
      "\t${7:GetOneResponse},",
      "\t${8:CreateResponse},",
      "\t${9:UpdateResponse},",
      "\t${10:DeleteResponse},",
      "> {",
      "\tprotected paths: RepositoryPath = {",
      "\t\tbase: '${11}',",
      "\t\tcreate: '${12}',",
      "\t\tget: '${13}',",
      "\t\tupdate(id: string | number) {",
      "\t\t\treturn `${this.base}${14}`;",
      "\t\t},",
      "\t\tdelete(id: string | number) {",
      "\t\t\treturn `${this.base}${15}`;",
      "\t\t},",
      "\t\tgetOne(id: string | number) {",
      "\t\t\treturn `${this.base}${16}`;",
      "\t\t},",
      "\t};",
      "}",
      "",
      "export default new ${1:Demo}Repository();"
    ],
    "description": ""
  }
}
